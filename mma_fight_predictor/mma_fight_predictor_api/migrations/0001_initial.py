# Generated by Django 4.2.1 on 2023-10-13 20:45

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Fighter",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("first_name", models.CharField(blank=True, max_length=40)),
                ("last_name", models.CharField(blank=True, max_length=40, null=True)),
                ("gender", models.CharField(blank=True, max_length=6)),
                ("style", models.CharField(blank=True, max_length=30, null=True)),
                ("record", models.CharField(blank=True, max_length=30)),
                ("height", models.CharField(blank=True, max_length=20)),
                ("stance", models.CharField(blank=True, max_length=20)),
                ("dob", models.CharField(blank=True, max_length=20)),
                ("weight", models.CharField(blank=True, max_length=20)),
                ("reach", models.CharField(blank=True, max_length=20)),
                ("slpm", models.FloatField(default=0.0)),
                ("str_acc", models.CharField(blank=True, max_length=5)),
                ("sapm", models.FloatField(default=0.0)),
                ("str_def", models.CharField(blank=True, max_length=5)),
                ("td_avg", models.FloatField(default=0.0)),
                ("td_acc", models.CharField(blank=True, max_length=5)),
                ("td_def", models.CharField(blank=True, max_length=5)),
                ("sub_avg", models.FloatField(default=0.0)),
            ],
        ),
        migrations.CreateModel(
            name="Token",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("refresh_token", models.CharField(blank=True, max_length=600)),
                ("access_token", models.CharField(blank=True, max_length=600)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Purchase",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("purchase_date", models.DateTimeField()),
                ("is_yearly_subscription", models.BooleanField(default=False)),
                ("event_name", models.CharField(max_length=255)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Prediction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("fight_date", models.DateField(blank=True, null=True)),
                ("blue_fighter_wld_record", models.CharField(max_length=20)),
                ("red_fighter_wld_record", models.CharField(max_length=20)),
                ("blue_fighter_reach", models.CharField(max_length=50)),
                ("red_fighter_reach", models.CharField(max_length=50)),
                ("blue_fighter_slpm", models.CharField(max_length=50)),
                ("red_fighter_slpm", models.CharField(max_length=50)),
                ("blue_fighter_striking_accuracy", models.CharField(max_length=50)),
                ("red_fighter_striking_accuracy", models.CharField(max_length=50)),
                ("blue_fighter_sapm", models.CharField(max_length=50)),
                ("red_fighter_sapm", models.CharField(max_length=50)),
                ("blue_fighter_defense", models.CharField(max_length=50)),
                ("red_fighter_defense", models.CharField(max_length=50)),
                (
                    "blue_fighter_takedown_average_15_min",
                    models.CharField(max_length=50),
                ),
                (
                    "red_fighter_takedown_average_15_min",
                    models.CharField(max_length=50),
                ),
                ("blue_fighter_takedown_average", models.CharField(max_length=50)),
                ("red_fighter_takedown_average", models.CharField(max_length=50)),
                ("blue_fighter_takedown_accuracy", models.CharField(max_length=50)),
                ("red_fighter_takedown_accuracy", models.CharField(max_length=50)),
                ("blue_fighter_takedown_defense", models.CharField(max_length=50)),
                ("red_fighter_takedown_defense", models.CharField(max_length=50)),
                (
                    "blue_fighter_submission_average_15_min_average",
                    models.CharField(max_length=50),
                ),
                (
                    "red_fighter_submission_average_15_min_average",
                    models.CharField(max_length=50),
                ),
                ("blue_fighter_count", models.CharField(max_length=50)),
                ("red_fighter_count", models.CharField(max_length=50)),
                ("did_prediction_winner_win", models.BooleanField(null=True)),
                (
                    "red_fighter_betting_odds",
                    models.CharField(default=None, max_length=20, null=True),
                ),
                (
                    "blue_fighter_betting_odds",
                    models.CharField(default=None, max_length=20, null=True),
                ),
                (
                    "blue_fighter",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="prediction_blue_fighter",
                        to="mma_fight_predictor_api.fighter",
                    ),
                ),
                (
                    "count_winner",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="count_winner",
                        to="mma_fight_predictor_api.fighter",
                    ),
                ),
                (
                    "defense_winner",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="defense_winner",
                        to="mma_fight_predictor_api.fighter",
                    ),
                ),
                (
                    "fight_winner",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="fight_winner",
                        to="mma_fight_predictor_api.fighter",
                    ),
                ),
                (
                    "overall_winner",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="overall_winner",
                        to="mma_fight_predictor_api.fighter",
                    ),
                ),
                (
                    "reach_winner",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="reach_winner",
                        to="mma_fight_predictor_api.fighter",
                    ),
                ),
                (
                    "red_fighter",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="prediction_red_fighter",
                        to="mma_fight_predictor_api.fighter",
                    ),
                ),
                (
                    "sapm_winner",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="sapm_winner",
                        to="mma_fight_predictor_api.fighter",
                    ),
                ),
                (
                    "slpm_winner",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="slpm_winner",
                        to="mma_fight_predictor_api.fighter",
                    ),
                ),
                (
                    "striking_accuracy_winner",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="striking_accuracy_winner",
                        to="mma_fight_predictor_api.fighter",
                    ),
                ),
                (
                    "submission_average_15_min_average_winner",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="submission_average_15_min_average_winner",
                        to="mma_fight_predictor_api.fighter",
                    ),
                ),
                (
                    "takedown_accuracy_winner",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="takedown_accuracy_winner",
                        to="mma_fight_predictor_api.fighter",
                    ),
                ),
                (
                    "takedown_average_15_min_winner",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="takedown_average_15_min_winner",
                        to="mma_fight_predictor_api.fighter",
                    ),
                ),
                (
                    "takedown_average_winner",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="takedown_average_winner",
                        to="mma_fight_predictor_api.fighter",
                    ),
                ),
                (
                    "takedown_defense_winner",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="takedown_defense_winner",
                        to="mma_fight_predictor_api.fighter",
                    ),
                ),
                (
                    "wld_winner",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="wld_winner",
                        to="mma_fight_predictor_api.fighter",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Image",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image_data", models.BinaryField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "fighter",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="fighter",
                        to="mma_fight_predictor_api.fighter",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Fight",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("r_kd", models.IntegerField(blank=True, null=True)),
                ("b_kd", models.IntegerField(blank=True, null=True)),
                ("r_sig_str", models.CharField(blank=True, max_length=30, null=True)),
                ("b_sig_str", models.CharField(blank=True, max_length=30, null=True)),
                (
                    "r_sig_str_pct",
                    models.CharField(blank=True, max_length=30, null=True),
                ),
                (
                    "b_sig_str_pct",
                    models.CharField(blank=True, max_length=30, null=True),
                ),
                ("r_total_str", models.CharField(blank=True, max_length=30, null=True)),
                ("b_total_str", models.CharField(blank=True, max_length=30, null=True)),
                ("r_td", models.CharField(blank=True, max_length=30, null=True)),
                ("b_td", models.CharField(blank=True, max_length=30, null=True)),
                ("r_td_pct", models.CharField(blank=True, max_length=30, null=True)),
                ("b_td_pct", models.CharField(blank=True, max_length=30, null=True)),
                ("r_sub_att", models.CharField(blank=True, max_length=30, null=True)),
                ("b_sub_att", models.CharField(blank=True, max_length=30, null=True)),
                ("r_rev", models.CharField(blank=True, max_length=30, null=True)),
                ("b_rev", models.CharField(blank=True, max_length=30, null=True)),
                ("r_ctrl", models.CharField(blank=True, max_length=30, null=True)),
                ("b_ctrl", models.CharField(blank=True, max_length=30, null=True)),
                ("r_head", models.CharField(blank=True, max_length=30, null=True)),
                ("b_head", models.CharField(blank=True, max_length=30, null=True)),
                ("r_body", models.CharField(blank=True, max_length=30, null=True)),
                ("b_body", models.CharField(blank=True, max_length=30, null=True)),
                ("r_leg", models.CharField(blank=True, max_length=30, null=True)),
                ("b_leg", models.CharField(blank=True, max_length=30, null=True)),
                ("r_distance", models.CharField(blank=True, max_length=30, null=True)),
                ("b_distance", models.CharField(blank=True, max_length=30, null=True)),
                ("r_clinch", models.CharField(blank=True, max_length=30, null=True)),
                ("b_clinch", models.CharField(blank=True, max_length=30, null=True)),
                ("r_ground", models.CharField(blank=True, max_length=30, null=True)),
                ("b_ground", models.CharField(blank=True, max_length=30, null=True)),
                ("win_by", models.CharField(blank=True, max_length=30, null=True)),
                ("last_round", models.IntegerField(blank=True, null=True)),
                (
                    "last_round_time",
                    models.CharField(blank=True, max_length=30, null=True),
                ),
                ("referee", models.CharField(blank=True, max_length=40, null=True)),
                ("date", models.DateField(blank=True, null=True)),
                ("location", models.CharField(blank=True, max_length=80, null=True)),
                ("fight_type", models.CharField(blank=True, max_length=80, null=True)),
                ("winner", models.CharField(blank=True, max_length=80, null=True)),
                ("format", models.CharField(blank=True, max_length=80, null=True)),
                ("loser", models.CharField(blank=True, max_length=80, null=True)),
                (
                    "blue_fighter",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="blue_fighter",
                        to="mma_fight_predictor_api.fighter",
                    ),
                ),
                (
                    "red_fighter",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="red_fighter",
                        to="mma_fight_predictor_api.fighter",
                    ),
                ),
            ],
        ),
    ]
